{"paragraphs":[{"text":"%md\n# Sentiment Analysis\n## Spark Machine Learning\nThis notebook is part two of a series of notebooks demonstrating an end-to-end application that combines streaming data with machine learning and fast storage.\n* Part 1 shows how to use Apache Spark’s ML pipelines with a Logistic Regression Classifier to predict Sentiment\n* Part 2 shows how to use this model with Streaming Data. \nFor more information, see [this](https://mapr.com/ebook/getting-started-with-apache-spark-v2/)  MapR Spark ebook.\n","user":"mapr","dateUpdated":"2019-04-04T15:15:09+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Sentiment Analysis</h1>\n<h2>Spark Machine Learning</h2>\n<p>This notebook is part two of a series of notebooks demonstrating an end-to-end application that combines streaming data with machine learning and fast storage.<br/>* Part 1 shows how to use Apache Spark’s ML pipelines with a Logistic Regression Classifier to predict Sentiment<br/>* Part 2 shows how to use this model with Streaming Data.<br/>For more information, see <a href=\"https://mapr.com/ebook/getting-started-with-apache-spark-v2/\">this</a> MapR Spark ebook.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554221563085_495084026","id":"20190220-173254_1728425170","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-04T15:15:09+0000","dateFinished":"2019-04-04T15:15:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:12377"},{"text":"%md \n## Supervised Machine Learning Classification\nSupervised algorithms use labeled data in which both the input and target outcome, or label, are provided to the algorithm. Supervised learning is also called predictive modeling or predictive analytics, because you build a model that is capable of making predictions. \n<img src=\"https://mapr.com/blog/apache-spark-machine-learning-tutorial/assets/image13.png\" width=\"500\" height=\"500\">\nClassification takes a set of data with known labels and predetermined features and learns how to label new records based on that information. Features are the \"if questions\" that you ask. The label is the answer to those questions. Let’s go through an example for Text Classification: \nWhat are we trying to predict?\n* Whether a Product Review is positive or negative.\n* Delayed is the Label: 1 for positive 0 for negative\n\nWhat are the properties that you can use to make predictions?\nThe review text words, are used as the features to discover similarities and categorize customer text sentiment as positive or negative.\n\n### Logistic Regression\nLogistic regression is a popular method to predict a binary response. It is a special case of Generalized Linear models that predicts the probability of the outcome. Logistic regression measures the relationship between the Y “Label” and the X “Features” by estimating probabilities using a logistic function. The model predicts a probability which is used to predict the label class.\n\n### Review Data set\nThe data set has  the following format:\n{\"reviewerID\": \"A1PUWI9RTQV19S\", \"asin\": \"B003Y5C132\", \"reviewerName\": \"kris\", \"helpful\": [0, 1], \"reviewText\": \"A little small in hind sight, but I did order a .30 cal box. Good condition, and keeps my ammo organized.\", \"overall\": 5.0, \"summary\": \"Nice ammo can\", \"unixReviewTime\": 1384905600, \"reviewTime\": \"11 20, 2013\"}\n\nwith the following schema\n\nreviewerID - ID of the reviewer, e.g. A2SUAM1J3GNN3B\nasin - ID of the product, e.g. 0000013714\nreviewerName - name of the reviewer\nhelpful - helpfulness rating of the review, e.g. 2/3\nreviewText - text of the review\noverall - rating of the product\nsummary - summary of the review\nunixReviewTime - time of the review (unix time)\nreviewTime - time of the review (raw)\n","user":"mapr","dateUpdated":"2019-04-05T23:40:03+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Supervised Machine Learning Classification</h2>\n<p>Supervised algorithms use labeled data in which both the input and target outcome, or label, are provided to the algorithm. Supervised learning is also called predictive modeling or predictive analytics, because you build a model that is capable of making predictions.<br/><img src=\"https://mapr.com/blog/apache-spark-machine-learning-tutorial/assets/image13.png\" width=\"500\" height=\"500\"><br/>Classification takes a set of data with known labels and predetermined features and learns how to label new records based on that information. Features are the &ldquo;if questions&rdquo; that you ask. The label is the answer to those questions. Let’s go through an example for Text Classification:<br/>What are we trying to predict?<br/>* Whether a Product Review is positive or negative.<br/>* Delayed is the Label: 1 for positive 0 for negative</p>\n<p>What are the properties that you can use to make predictions?<br/>The review text words, are used as the features to discover similarities and categorize customer text sentiment as positive or negative.</p>\n<h3>Logistic Regression</h3>\n<p>Logistic regression is a popular method to predict a binary response. It is a special case of Generalized Linear models that predicts the probability of the outcome. Logistic regression measures the relationship between the Y “Label” and the X “Features” by estimating probabilities using a logistic function. The model predicts a probability which is used to predict the label class.</p>\n<h3>Review Data set</h3>\n<p>The data set has the following format:<br/>{&ldquo;reviewerID&rdquo;: &ldquo;A1PUWI9RTQV19S&rdquo;, &ldquo;asin&rdquo;: &ldquo;B003Y5C132&rdquo;, &ldquo;reviewerName&rdquo;: &ldquo;kris&rdquo;, &ldquo;helpful&rdquo;: [0, 1], &ldquo;reviewText&rdquo;: &ldquo;A little small in hind sight, but I did order a .30 cal box. Good condition, and keeps my ammo organized.&rdquo;, &ldquo;overall&rdquo;: 5.0, &ldquo;summary&rdquo;: &ldquo;Nice ammo can&rdquo;, &ldquo;unixReviewTime&rdquo;: 1384905600, &ldquo;reviewTime&rdquo;: &ldquo;11 20, 2013&rdquo;}</p>\n<p>with the following schema</p>\n<p>reviewerID - ID of the reviewer, e.g. A2SUAM1J3GNN3B<br/>asin - ID of the product, e.g. 0000013714<br/>reviewerName - name of the reviewer<br/>helpful - helpfulness rating of the review, e.g. 2/3<br/>reviewText - text of the review<br/>overall - rating of the product<br/>summary - summary of the review<br/>unixReviewTime - time of the review (unix time)<br/>reviewTime - time of the review (raw)</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554221563094_1890900596","id":"20170530-122945_1594214131","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-05T23:40:03+0000","dateFinished":"2019-04-05T23:40:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12378"},{"title":"Import needed packages","text":"%spark\nimport org.apache.spark._\nimport org.apache.spark.ml._\nimport org.apache.spark.ml.feature._\nimport org.apache.spark.ml.classification._\nimport org.apache.spark.ml.evaluation._\nimport org.apache.spark.ml.tuning._\nimport org.apache.spark.sql._\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types._","user":"mapr","dateUpdated":"2019-04-09T19:31:22+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark._\nimport org.apache.spark.ml._\nimport org.apache.spark.ml.feature._\nimport org.apache.spark.ml.classification._\nimport org.apache.spark.ml.evaluation._\nimport org.apache.spark.ml.tuning._\nimport org.apache.spark.sql._\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types._\n"}]},"apps":[],"jobName":"paragraph_1554221563100_-2044591020","id":"20170508-144514_403247535","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-09T19:31:22+0000","dateFinished":"2019-04-09T19:32:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12379"},{"title":"Read the data from JSON file into a Dataset of type Flight","text":"import spark.implicits._\n\n// file path location\nvar file =\"/user/mapr/data/revsporttrain.json\"\n// With the SparkSession read method, read data from a file into a Dataset\nval df0  = spark.read.format(\"json\").option(\"inferSchema\", \"true\").load(file) \n\n// add column combining summary and review text, drop some others \nval df = df0.withColumn(\"reviewTS\", concat($\"summary\",lit(\" \"),$\"reviewText\" )).drop(\"helpful\").drop(\"reviewerID\").drop(\"reviewerName\").drop(\"reviewTime\")\n\ndf.show(5)\n","user":"mapr","dateUpdated":"2019-04-09T19:31:16+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import spark.implicits._\nfile: String = /user/mapr/data/revsporttrain.json\ndf0: org.apache.spark.sql.DataFrame = [asin: string, helpful: array<bigint> ... 7 more fields]\ndf: org.apache.spark.sql.DataFrame = [asin: string, overall: double ... 4 more fields]\n+----------+-------+--------------------+--------------------+--------------+--------------------+\n|      asin|overall|          reviewText|             summary|unixReviewTime|            reviewTS|\n+----------+-------+--------------------+--------------------+--------------+--------------------+\n|1881509818|    5.0|This came in on t...|      Woks very good|    1390694400|Woks very good Th...|\n|1881509818|    5.0|I had a factory G...|Works as well as ...|    1328140800|Works as well as ...|\n|1881509818|    4.0|If you don't have...|It's a punch, tha...|    1330387200|It's a punch, tha...|\n|1881509818|    4.0|This works no bet...|It's a punch with...|    1328400000|It's a punch with...|\n|1881509818|    4.0|I purchased this ...|Ok,tool does what...|    1366675200|Ok,tool does what...|\n+----------+-------+--------------------+--------------------+--------------+--------------------+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1554221563112_1780493022","id":"20170508-150131_378637203","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-02T22:01:13+0000","dateFinished":"2019-04-02T22:01:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12380"},{"title":"Print the schema","text":"df.printSchema","user":"mapr","dateUpdated":"2019-04-05T23:40:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- asin: string (nullable = true)\n |-- overall: double (nullable = true)\n |-- reviewText: string (nullable = true)\n |-- summary: string (nullable = true)\n |-- unixReviewTime: long (nullable = true)\n |-- reviewTS: string (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1554221563119_-442697998","id":"20190321-173712_1018367148","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-02T17:34:48+0000","dateFinished":"2019-04-02T17:34:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12381"},{"text":"%md\nThe describe() function performs summary statistics calculations on  numeric columns ","user":"mapr","dateUpdated":"2019-04-05T23:41:13+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>The describe() function performs summary statistics calculations on numeric columns</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554221563127_1415456419","id":"20170524-214640_973339640","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-05T23:41:13+0000","dateFinished":"2019-04-05T23:41:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12382"},{"title":"get Rating counts","text":"df.describe(\"overall\").show\n","user":"mapr","dateUpdated":"2019-04-05T23:41:06+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+------------------+\n|summary|           overall|\n+-------+------------------+\n|  count|            200000|\n|   mean|          4.395105|\n| stddev|0.9894654790262587|\n|    min|               1.0|\n|    max|               5.0|\n+-------+------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1554221563135_2000642458","id":"20190321-173801_272187174","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-02T22:01:22+0000","dateFinished":"2019-04-02T22:01:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12383"},{"title":"Filter to remove neutral product ratings ","text":"val df1 = df.filter(\"overall !=3\")\ndf1.show\ndf1.describe(\"overall\").show\n\n","user":"mapr","dateUpdated":"2019-04-02T22:01:56+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df1: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [asin: string, overall: double ... 4 more fields]\n+----------+-------+--------------------+--------------------+--------------+--------------------+\n|      asin|overall|          reviewText|             summary|unixReviewTime|            reviewTS|\n+----------+-------+--------------------+--------------------+--------------+--------------------+\n|1881509818|    5.0|This came in on t...|      Woks very good|    1390694400|Woks very good Th...|\n|1881509818|    5.0|I had a factory G...|Works as well as ...|    1328140800|Works as well as ...|\n|1881509818|    4.0|If you don't have...|It's a punch, tha...|    1330387200|It's a punch, tha...|\n|1881509818|    4.0|This works no bet...|It's a punch with...|    1328400000|It's a punch with...|\n|1881509818|    4.0|I purchased this ...|Ok,tool does what...|    1366675200|Ok,tool does what...|\n|1881509818|    5.0|Needed this tool ...|Glock punch tool ...|    1351814400|Glock punch tool ...|\n|1881509818|    5.0|If u don't have i...|          Great tool|    1402358400|Great tool If u d...|\n|2094869245|    4.0|This light will n...|             Bright!|    1377907200|Bright! This ligh...|\n|2094869245|    5.0|Light and laser t...|             Be seen|    1369612800|Be seen Light and...|\n|2094869245|    5.0|Does everything i...|Bicycle rear tail...|    1383350400|Bicycle rear tail...|\n|2094869245|    4.0|Very bright.  I w...|          Great lite|    1399420800|Great lite Very b...|\n|2094869245|    5.0|Mine arrived with...|For $11, it's a b...|    1389657600|For $11, it's a b...|\n|2094869245|    4.0|It works great it...|               Bulky|    1387497600|Bulky It works gr...|\n|2094869245|    5.0|I love this light...|            Love it!|    1379462400|Love it! I love t...|\n|2094869245|    5.0|Bit bulky. One bu...|       Bulky but....|    1389830400|Bulky but.... Bit...|\n|2094869245|    5.0|it is bright and ...|     rear bike light|    1386374400|rear bike light i...|\n|2094869245|    4.0|A mice bright lig...|Needed a little m...|    1383523200|Needed a little m...|\n|2094869245|    4.0|Had one ride on t...|Good light for th...|    1384214400|Good light for th...|\n|7245456259|    2.0|So it worked well...|resistance was go...|    1395964800|resistance was go...|\n|7245456259|    5.0|My girlfriend is ...|Girlfriend loves ...|    1378339200|Girlfriend loves ...|\n+----------+-------+--------------------+--------------------+--------------+--------------------+\nonly showing top 20 rows\n\n+-------+------------------+\n|summary|           overall|\n+-------+------------------+\n|  count|            183932|\n|   mean| 4.516979100972098|\n| stddev|0.9379170746751232|\n|    min|               1.0|\n|    max|               5.0|\n+-------+------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1554221563142_-943792086","id":"20171129-221736_959969733","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-02T22:01:56+0000","dateFinished":"2019-04-02T22:01:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12384"},{"title":"get rating counts after filtering","text":"df.groupBy(\"overall\").count.show\ndf1.groupBy(\"overall\").count.show\n","user":"mapr","dateUpdated":"2019-04-05T23:41:38+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+------+\n|overall| count|\n+-------+------+\n|    1.0|  6198|\n|    4.0| 43303|\n|    3.0| 16068|\n|    2.0|  6916|\n|    5.0|127515|\n+-------+------+\n\n+-------+------+\n|overall| count|\n+-------+------+\n|    1.0|  6198|\n|    4.0| 43303|\n|    2.0|  6916|\n|    5.0|127515|\n+-------+------+\n\n"}]},"apps":[],"jobName":"paragraph_1554221563149_1901390923","id":"20190321-173941_1496948865","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-02T22:02:06+0000","dateFinished":"2019-04-02T22:02:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12385"},{"text":"%md\nIn the code below a Spark Bucketizer is used to split the dataset into positive and negative reviews (where positive >= 4 ) \nwith a label 0/1 column. Then the resulting total counts are displayed. ","user":"mapr","dateUpdated":"2019-04-05T23:42:26+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>In the code below a Spark Bucketizer is used to split the dataset into positive and negative reviews (where positive &gt;= 4 )<br/>with a label 0/1 column. Then the resulting total counts are displayed.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554221563153_-1573487970","id":"20190305-221927_113621865","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-05T23:42:26+0000","dateFinished":"2019-04-05T23:42:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12386"},{"title":"Bucket Reviews into positive and negative ","text":"val bucketizer = new Bucketizer().setInputCol(\"overall\").setOutputCol(\"label\").setSplits(Array(Double.NegativeInfinity,4.0,Double.PositiveInfinity))\n\nval df2= bucketizer.transform(df1)\ndf2.cache\ndf2.groupBy(\"overall\",\"label\").count.show\n","user":"mapr","dateUpdated":"2019-04-02T22:03:50+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"bucketizer: org.apache.spark.ml.feature.Bucketizer = bucketizer_7678a4c6303f\ndf2: org.apache.spark.sql.DataFrame = [asin: string, overall: double ... 5 more fields]\nres21: df2.type = [asin: string, overall: double ... 5 more fields]\n+-------+-----+------+\n|overall|label| count|\n+-------+-----+------+\n|    2.0|  0.0|  6916|\n|    5.0|  1.0|127515|\n|    1.0|  0.0|  6198|\n|    4.0|  1.0| 43303|\n+-------+-----+------+\n\n"}]},"apps":[],"jobName":"paragraph_1554221563158_957178306","id":"20171123-050717_1328190278","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-02T22:03:50+0000","dateFinished":"2019-04-02T22:03:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12387"},{"text":"%md\n## Stratified Sampling\nIn order to ensure that our model is sensitive to the negative samples we can put the two sample types on the same footing using stratified sampling. \n\nThe the DataFrames sampleBy() function is used to stratify, by providing the fractions of each sample type to be returned.\nHere, we're keeping all instances of negative, but downsampling the positive instances to 10%, then displaying the results\n","user":"mapr","dateUpdated":"2019-04-05T23:43:25+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Stratified Sampling</h2>\n<p>In order to ensure that our model is sensitive to the negative samples we can put the two sample types on the same footing using stratified sampling. </p>\n<p>The the DataFrames sampleBy() function is used to stratify, by providing the fractions of each sample type to be returned.<br/>Here, we&rsquo;re keeping all instances of negative, but downsampling the positive instances to 10%, then displaying the results</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554221563163_-1103424605","id":"20190305-223154_803200822","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-05T23:43:25+0000","dateFinished":"2019-04-05T23:43:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12388"},{"text":"val fractions = Map(1.0 -> .1, 0.0 -> 1.0)\nval df3 = df2.stat.sampleBy(\"label\", fractions, 36L)\ndf3.groupBy(\"label\").count.show\n    \n","user":"mapr","dateUpdated":"2019-04-02T22:03:58+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"fractions: scala.collection.immutable.Map[Double,Double] = Map(1.0 -> 0.1, 0.0 -> 1.0)\ndf3: org.apache.spark.sql.DataFrame = [asin: string, overall: double ... 5 more fields]\n+-----+-----+\n|label|count|\n+-----+-----+\n|  0.0|13114|\n|  1.0|17086|\n+-----+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1554221563170_226484557","id":"20190321-175152_2103989778","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-02T22:03:58+0000","dateFinished":"2019-04-02T22:04:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12389"},{"text":"%md\nThere are typically two phases in machine learning:\n* Data Discovery: The first phase involves analysis on historical data to build and train the machine learning model.\n* Analytics Using the Model: The second phase uses the model in production on new data.\n\nIn production, models need to be continuously monitored and updated with new models when needed.\n<img src=\"https://mapr.com/blog/apache-spark-machine-learning-tutorial/assets/image21.png\">\nIn this lab the process has been simplified due to time and memory constraints(one node per student). We will split out dataset into a training and test set and evaluate the results on the test set. In the real world more data and iterations of training and evaluation with k-fold cross validation is recommended. ","user":"mapr","dateUpdated":"2019-04-05T23:43:55+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>There are typically two phases in machine learning:<br/>* Data Discovery: The first phase involves analysis on historical data to build and train the machine learning model.<br/>* Analytics Using the Model: The second phase uses the model in production on new data.</p>\n<p>In production, models need to be continuously monitored and updated with new models when needed.<br/><img src=\"https://mapr.com/blog/apache-spark-machine-learning-tutorial/assets/image21.png\"><br/>In this lab the process has been simplified due to time and memory constraints(one node per student). We will split out dataset into a training and test set and evaluate the results on the test set. In the real world more data and iterations of training and evaluation with k-fold cross validation is recommended.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554221563178_1883191519","id":"20190308-210308_1297732685","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-05T23:43:55+0000","dateFinished":"2019-04-05T23:43:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12390"},{"title":"Split Into Training and Test set","text":"val splitSeed = 5043\nval Array(trainingData, testData) = df3.randomSplit(Array(0.8, 0.2), splitSeed)\n\n\ntrainingData.cache\ntrainingData.groupBy(\"label\").count.show","user":"mapr","dateUpdated":"2019-04-02T22:04:05+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"splitSeed: Int = 5043\ntrainingData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [asin: string, overall: double ... 5 more fields]\ntestData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [asin: string, overall: double ... 5 more fields]\nres26: trainingData.type = [asin: string, overall: double ... 5 more fields]\n+-----+-----+\n|label|count|\n+-----+-----+\n|  0.0|10475|\n|  1.0|13613|\n+-----+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1554221563183_-1023210162","id":"20190305-223741_1028691135","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-02T22:04:05+0000","dateFinished":"2019-04-02T22:04:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12391"},{"text":"%md\n## Feature Extraction and Pipelining\nIn order for the features to be used by a machine learning algorithm, they must be transformed and put into Feature Vectors, which are vectors of numbers \nrepresenting the value for each feature.\n<img src=\"https://mapr.com/blog/fast-data-processing-pipeline-predicting-flight-delays-using-apache-apis-pt-1/assets/reference-learning-spark.png\" width=\"600\" height=\"600\">\nSpark ML provides a uniform set of high-level APIs built on top of DataFrames. We will use an ML Pipeline to pass the data through transformers in order to extract the features and an estimator to produce the model.\n<img src=\"https://mapr.com/blog/apache-spark-machine-learning-tutorial/assets/image8.png\" width=\"600\" height=\"600\">\nTransformer: A Transformer is an algorithm which transforms one DataFrame into another DataFrame. We will use a transformer to get a DataFrame with a features vector column.\nEstimator: An Estimator is an algorithm which can be fit on a DataFrame to produce a Transformer. We will use a a Random Forest estimator to train a model which can transform data to get predictions.\nPipeline: A Pipeline chains multiple Transformers and Estimators together to specify a ML workflow. \nWe will use a Spark ML Pipeline to pass our data through transformers in order to extract the features, an estimator to produce a model.\nThe we will use an evaluator to evaluate the model on the test data. \n\n\n","user":"mapr","dateUpdated":"2019-04-05T23:44:25+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Feature Extraction and Pipelining</h2>\n<p>In order for the features to be used by a machine learning algorithm, they must be transformed and put into Feature Vectors, which are vectors of numbers<br/>representing the value for each feature.<br/><img src=\"https://mapr.com/blog/fast-data-processing-pipeline-predicting-flight-delays-using-apache-apis-pt-1/assets/reference-learning-spark.png\" width=\"600\" height=\"600\"><br/>Spark ML provides a uniform set of high-level APIs built on top of DataFrames. We will use an ML Pipeline to pass the data through transformers in order to extract the features and an estimator to produce the model.<br/><img src=\"https://mapr.com/blog/apache-spark-machine-learning-tutorial/assets/image8.png\" width=\"600\" height=\"600\"><br/>Transformer: A Transformer is an algorithm which transforms one DataFrame into another DataFrame. We will use a transformer to get a DataFrame with a features vector column.<br/>Estimator: An Estimator is an algorithm which can be fit on a DataFrame to produce a Transformer. We will use a a Random Forest estimator to train a model which can transform data to get predictions.<br/>Pipeline: A Pipeline chains multiple Transformers and Estimators together to specify a ML workflow.<br/>We will use a Spark ML Pipeline to pass our data through transformers in order to extract the features, an estimator to produce a model.<br/>The we will use an evaluator to evaluate the model on the test data.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554221563188_-1826066282","id":"20190305-223449_516878384","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-05T23:44:25+0000","dateFinished":"2019-04-05T23:44:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12392"},{"text":"%md\nThe ML package needs the label and feature vector to be added as columns to a dataframe. \nBelow we set up a pipeline to pass the data through transformers in order to extract the features and label. \nWe use the RegexTokenizer to split each document into tokens. See: http://spark.apache.org/docs/latest/ml-features.html#tokenizer\nWe remove stopwords using the StopWordsRemover(). See: http://spark.apache.org/docs/latest/ml-features.html#stopwordsremover\n","user":"mapr","dateUpdated":"2019-04-05T23:44:58+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>The ML package needs the label and feature vector to be added as columns to a dataframe.<br/>Below we set up a pipeline to pass the data through transformers in order to extract the features and label.<br/>We use the RegexTokenizer to split each document into tokens. See: <a href=\"http://spark.apache.org/docs/latest/ml-features.html#tokenizer\">http://spark.apache.org/docs/latest/ml-features.html#tokenizer</a><br/>We remove stopwords using the StopWordsRemover(). See: <a href=\"http://spark.apache.org/docs/latest/ml-features.html#stopwordsremover\">http://spark.apache.org/docs/latest/ml-features.html#stopwordsremover</a></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554221563194_-1808865696","id":"20170603-184811_78732818","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-05T23:44:58+0000","dateFinished":"2019-04-05T23:44:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12393"},{"title":"Use a RegexTokenizer to split into words, then filter out unimportant words","text":"\nval tokenizer = new RegexTokenizer().setInputCol(\"reviewTS\").setOutputCol(\"reviewTokensUf\").setPattern(\"\\\\s+|[,.()\\\"]\")\n\nval remover = new StopWordsRemover().setStopWords(StopWordsRemover.loadDefaultStopWords(\"english\")).setInputCol(\"reviewTokensUf\").setOutputCol(\"reviewTokens\")\n \n","user":"mapr","dateUpdated":"2019-04-05T23:45:47+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"tokenizer: org.apache.spark.ml.feature.RegexTokenizer = regexTok_9c3f36f914cd\nremover: org.apache.spark.ml.feature.StopWordsRemover = stopWords_a3a5f9e1578c\n"}]},"apps":[],"jobName":"paragraph_1554221563200_-1282164593","id":"20170508-150543_958647761","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-02T22:04:14+0000","dateFinished":"2019-04-02T22:04:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12394"},{"title":"Just to show what the tokenizer and remove will do in the pipeline","text":"val temp=  tokenizer.transform(trainingData)\nval temp2= remover.transform(temp)\n\nz.show(temp2.select(\"reviewTS\",  \"reviewTokens\").limit(2))","user":"mapr","dateUpdated":"2019-04-05T23:46:32+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"1":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{"columns":[{"name":"reviewTS","visible":true,"width":443,"sort":{},"filters":[{}],"pinned":""},{"name":"reviewTokens","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""}],"scrollFocus":{},"selection":[],"grouping":{"grouping":[],"aggregations":[],"rowExpandedStates":{}},"treeView":{},"pagination":{"paginationCurrentPage":1,"paginationPageSize":250}},"tableColumnTypeState":{"names":{"reviewTS":"string","reviewTokens":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true,"editorHide":false,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"temp: org.apache.spark.sql.DataFrame = [asin: string, overall: double ... 6 more fields]\ntemp2: org.apache.spark.sql.DataFrame = [asin: string, overall: double ... 7 more fields]\n"},{"type":"TABLE","data":"reviewTS\treviewTokens\nWoks very good This came in on time and I am veru happy with it, I haved used it already and it makes taking out the pins in my glock 32 very easy\tWrappedArray(woks, good, came, time, veru, happy, haved, used, already, makes, taking, pins, glock, 32, easy)\nresistance was good but quality wasn't So it worked well for a couple weeks, but during a lunge workout, it snapped on me.  I liked it and thought it was a great product until this happened.  I noticed small rips on the band.  This could have been the issue.\tWrappedArray(resistance, good, quality, worked, well, couple, weeks, lunge, workout, snapped, liked, thought, great, product, happened, noticed, small, rips, band, issue)\n"}]},"apps":[],"jobName":"paragraph_1554221563206_-1578561332","id":"20190402-014634_535523739","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-02T22:20:20+0000","dateFinished":"2019-04-02T22:20:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12395"},{"text":"%md\nWe use the CountVectorizer() to convert the array of words from the review text into vectors of token counts.\n\nThe CountVectorizer will return (VocabSize, Array(Indexed Tokens), Array(Token Frequency)).\n\nSee: http://spark.apache.org/docs/latest/ml-features.html#countvectorizer\n\nTerm frequency-inverse document frequency (TF-IDF) counts how many times a word occurs in the whole corpus and then calculates a proportion of the word's count in a sentence to its count in the whole corpus. This measure helps to evaluate how important a word is to a document in the whole collection of documents. In Spark  the .IDF(...) method does this for us.","user":"mapr","dateUpdated":"2019-04-02T21:55:42+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>We use the CountVectorizer() to convert the array of words from the review text into vectors of token counts.</p>\n<p>The CountVectorizer will return (VocabSize, Array(Indexed Tokens), Array(Token Frequency)).</p>\n<p>See: <a href=\"http://spark.apache.org/docs/latest/ml-features.html#countvectorizer\">http://spark.apache.org/docs/latest/ml-features.html#countvectorizer</a></p>\n<p>Term frequency-inverse document frequency (TF-IDF) counts how many times a word occurs in the whole corpus and then calculates a proportion of the word&rsquo;s count in a sentence to its count in the whole corpus. This measure helps to evaluate how important a word is to a document in the whole collection of documents. In Spark the .IDF(&hellip;) method does this for us.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554221563212_-291546479","id":"20190327-150809_1732587720","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-02T21:55:42+0000","dateFinished":"2019-04-02T21:55:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12396"},{"title":"Use CountVectorizer to do TF word count, then IDF to weight importance","text":"val cv = new CountVectorizer().setInputCol(\"reviewTokens\").setOutputCol(\"cv\").setVocabSize(200000) // .setMinDF(4)\n\nval idf = new IDF().setInputCol(\"cv\").setOutputCol(\"features\")\n\n","user":"mapr","dateUpdated":"2019-04-05T23:47:38+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"cv: org.apache.spark.ml.feature.CountVectorizer = cntVec_534011514dc7\nidf: org.apache.spark.ml.feature.IDF = idf_bbf88dd88c9c\n"}]},"apps":[],"jobName":"paragraph_1554221563216_-1550827407","id":"20170524-223310_2121058884","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-02T22:18:14+0000","dateFinished":"2019-04-02T22:18:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12397"},{"title":"Just to show what TF will do in pipeline","text":"val temp3=  cv.fit(temp2).transform(temp2)\nz.show(temp3.select(  \"reviewTokens\", \"cv\")limit(2))\n\n","user":"mapr","dateUpdated":"2019-04-05T23:48:29+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"1":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"reviewTokens":"string","cv":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true,"editorHide":false,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"temp3: org.apache.spark.sql.DataFrame = [asin: string, overall: double ... 8 more fields]\n"},{"type":"TABLE","data":"reviewTokens\tcv\nWrappedArray(woks, good, came, time, veru, happy, haved, used, already, makes, taking, pins, glock, 32, easy)\t(56004,[2,10,21,32,100,126,209,342,506,658,1428,2574,16120,24264,35307],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\nWrappedArray(resistance, good, quality, worked, well, couple, weeks, lunge, workout, snapped, liked, thought, great, product, happened, noticed, small, rips, band, issue)\t(56004,[1,2,6,8,13,31,163,168,192,276,487,518,589,643,770,955,1194,1297,4178,19185],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n"}]},"apps":[],"jobName":"paragraph_1554221563220_1286121144","id":"20190402-015251_1329755130","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-02T22:20:59+0000","dateFinished":"2019-04-02T22:21:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12398"},{"title":"Just to show what IDF will do in pipeline","text":"val temp4=  idf.fit(temp3).transform(temp3)\nz.show(temp4.select(  \"cv\", \"features\").limit(2))","user":"mapr","dateUpdated":"2019-04-05T23:48:40+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"1":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"cv":"string","features":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"temp4: org.apache.spark.sql.DataFrame = [asin: string, overall: double ... 9 more fields]\n"},{"type":"TABLE","data":"cv\tfeatures\n(56004,[2,10,21,32,100,126,209,342,506,658,1428,2574,16120,24264,35307],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\t(56004,[2,10,21,32,100,126,209,342,506,658,1428,2574,16120,24264,35307],[1.3189162538557524,1.997577127767003,2.0568257077792764,2.27108031167624,2.863301573646225,3.0011018050715017,3.3900102435852184,3.7438742229183006,4.4582988019255305,4.346507395937414,5.535633692146356,6.082177398514426,8.703216222627006,9.396363403186951,9.396363403186951])\n(56004,[1,2,6,8,13,31,163,168,192,276,487,518,589,643,770,955,1194,1297,4178,19185],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\t(56004,[1,2,6,8,13,31,163,168,192,276,487,518,589,643,770,955,1194,1297,4178,19185],[1.3167453737971118,1.3189162538557524,1.5214341820160893,1.9425118863569042,2.052613811061827,2.3350290362765134,3.188779919701724,3.245760634740672,3.316430208091361,3.620260266951124,4.115700971877636,4.165254786332365,4.655788580192657,4.32745920096672,4.781242886345692,5.001914248514512,5.008106218762434,5.169529657918772,6.793673717742568,8.990898295078788])\n"}]},"apps":[],"jobName":"paragraph_1554243668067_1731620874","id":"20190402-222108_1576098527","dateCreated":"2019-04-02T22:21:08+0000","dateStarted":"2019-04-02T22:21:44+0000","dateFinished":"2019-04-02T22:21:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12399"},{"text":"%md \nLogistic regression is a popular method to predict a binary response. It is a special case of Generalized Linear models that predicts the probability of the outcome. Logistic regression measures the relationship between the Y “Label” and the X “Features” by estimating probabilities using a logistic function. The model predicts a probability which is used to predict the label class.","user":"mapr","dateUpdated":"2019-04-02T20:02:18+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Logistic regression is a popular method to predict a binary response. It is a special case of Generalized Linear models that predicts the probability of the outcome. Logistic regression measures the relationship between the Y “Label” and the X “Features” by estimating probabilities using a logistic function. The model predicts a probability which is used to predict the label class.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554221563224_-1849566581","id":"20190327-164524_47621896","dateCreated":"2019-04-02T16:12:43+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:12400"},{"title":"Create Logistic Regression Estimator","text":"//  regularizer parameters to encourage simple models and avoid overfitting.\nval lpar = 0.02  \nval apar = 0.3    \n\n// The final element in our ml pipeline is an Logistic Regression estimator  \nval lr = new LogisticRegression().setMaxIter(100).setRegParam(lpar).setElasticNetParam(apar)  \n","user":"mapr","dateUpdated":"2019-04-02T22:44:10+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"lpar: Double = 0.02\napar: Double = 0.3\nlr: org.apache.spark.ml.classification.LogisticRegression = logreg_d027564008e5\n"}]},"apps":[],"jobName":"paragraph_1554221563228_-151382032","id":"20170603-185445_276463997","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-02T22:44:11+0000","dateFinished":"2019-04-02T22:44:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12401"},{"text":"%md\n## Setup Spark ML pipeline stages\nSet up a pipeline to pass the data through transformers to extract the features and label, and pass this to a random forest estimator to fit the model \n","user":"mapr","dateUpdated":"2019-04-02T23:12:52+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Setup Spark ML pipeline stages</h2>\n<p>Set up a pipeline to pass the data through transformers to extract the features and label, and pass this to a random forest estimator to fit the model</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554221563231_-691364437","id":"20170601-154525_1033166149","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-02T23:12:52+0000","dateFinished":"2019-04-02T23:12:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12402"},{"title":"Set up pipeline with  feature transformers and model estimator","text":"// Below we chain the stringindexers, vector assembler and logistic regressor in a Pipeline.\n val steps =  Array( tokenizer, remover, cv, idf,lr)\n val pipeline = new Pipeline().setStages(steps)\n","user":"mapr","dateUpdated":"2019-04-04T22:04:29+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"steps: Array[org.apache.spark.ml.PipelineStage with org.apache.spark.ml.util.DefaultParamsWritable{def copy(extra: org.apache.spark.ml.param.ParamMap): org.apache.spark.ml.PipelineStage with org.apache.spark.ml.util.DefaultParamsWritable{def copy(extra: org.apache.spark.ml.param.ParamMap): org.apache.spark.ml.PipelineStage with org.apache.spark.ml.util.DefaultParamsWritable{def copy(extra: org.apache.spark.ml.param.ParamMap): org.apache.spark.ml.PipelineStage with org.apache.spark.ml.util.DefaultParamsWritable}}}] = Array(regexTok_9c3f36f914cd, stopWords_a3a5f9e1578c, cntVec_534011514dc7, idf_bbf88dd88c9c, logreg_d027564008e5)\npipeline: org.apache.spark.ml.Pipeline = pipeline_58c975f13f91\n"}]},"apps":[],"jobName":"paragraph_1554221563239_-571655357","id":"20170508-151557_1422077156","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-02T23:13:02+0000","dateFinished":"2019-04-02T23:13:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12403"},{"text":"%md\n### Train the Model\nNext, we train the logistic regression model with elastic net regularization\nThe model is trained by making associations between the input features and the labeled output associated with those features. The pipeline.fit method returns a fitted pipeline Model.\n\n<img src=\"https://mapr.com/blog/fast-data-processing-pipeline-predicting-flight-delays-using-apache-apis-pt-1/assets/ml-cross-validation-process.png\" width=\"600\" height=\"600\">\n\nIn this lab we will only perform one iteration to train on the training data set and test on the test data set.\n","user":"mapr","dateUpdated":"2019-04-02T23:05:43+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Train the Model</h3>\n<p>Next, we train the logistic regression model with elastic net regularization<br/>The model is trained by making associations between the input features and the labeled output associated with those features. The pipeline.fit method returns a fitted pipeline Model.</p>\n<img src=\"https://mapr.com/blog/fast-data-processing-pipeline-predicting-flight-delays-using-apache-apis-pt-1/assets/ml-cross-validation-process.png\" width=\"600\" height=\"600\">\n<p>In this lab we will only perform one iteration to train on the training data set and test on the test data set.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554221563242_1502683539","id":"20190308-212752_1210705711","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-02T23:05:43+0000","dateFinished":"2019-04-02T23:05:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12404"},{"title":"Train the Model","text":"// will train on the vector of label and features.\nval model = pipeline.fit(trainingData)\n","user":"mapr","dateUpdated":"2019-04-02T23:13:21+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"model: org.apache.spark.ml.PipelineModel = pipeline_58c975f13f91\n"}]},"apps":[],"jobName":"paragraph_1554221563244_-604376144","id":"20171129-113112_994877662","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-02T23:13:21+0000","dateFinished":"2019-04-02T23:14:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12405"},{"text":"%md\nlogistic regression generates the coefficients of a formula to predict probability of occurrence of the dependent variable. Based on the probability, the parameters that maximize the probability of occurrence or nonoccurrence of a dependent event are selected. ","user":"mapr","dateUpdated":"2019-04-02T23:06:18+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>logistic regression generates the coefficients of a formula to predict probability of occurrence of the dependent variable. Based on the probability, the parameters that maximize the probability of occurrence or nonoccurrence of a dependent event are selected.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554221563246_-1276124920","id":"20190327-163136_1732342820","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-02T23:06:18+0000","dateFinished":"2019-04-02T23:06:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12406"},{"title":"Print out the feature importances for the logistic regression model","text":"// get vocabulary from the Count Vectorizer\nval vocabulary =model.stages(2).asInstanceOf[CountVectorizerModel].vocabulary \n// get the logistic regression model \nval lrModel = model.stages.last.asInstanceOf[LogisticRegressionModel]\n// Get array of coefficients\nval weights = lrModel.coefficients.toArray\n// get array of word, and corresponding coefficient Array[(String, Double)]\nval word_weight = vocabulary.zip(weights)\n\nword_weight.sortBy(-_._2).take(5).foreach {\n        case (word, weight) =>\n          println(s\"feature: $word, importance: $weight\")\n      }\nword_weight.sortBy(_._2).take(5).foreach {\n        case (word, weight) =>\n          println(s\"feature: $word, importance: $weight\")\n      }      \n      \n","user":"mapr","dateUpdated":"2019-04-09T19:46:55+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"vocabulary: Array[String] = Array(one, great, good, like, use, get, well, knife, product, fit, time, work, quality, much, little, really, made, bought, also, even, used, better, price, back, buy, bike, works, nice, first, -, easy, small, got, two, way, light, bag, put, need, thing, still, make, gun, enough, around, size, using, cheap, 2, blade, recommend, go, plastic, money, right, want, water, long, see, keep, think, bit, scope, perfect, another, something, sure, without, handle, case, pretty, love, set, best, hard, hold, big, going, 5, never, amazon, new, take, lot, know, look, fine, looking, makes, item, say, tool, find, side, fits, easily, worth, far, day, problem, 3, however, mount, sight, looks, bad, weight, since, last, feel, tried, rifle, carry, though, many, bottle, seems, may,...lrModel: org.apache.spark.ml.classification.LogisticRegressionModel = logreg_c34e6bfed24b\nweights: Array[Double] = Array(0.0, 0.6078697902359276, 0.2116386469012886, 0.0, 0.0, -0.07843088615817914, 0.17669343260215034, 0.0, -0.0021723152299774552, -0.07700518697472948, 0.0, -0.09148665488865505, 0.0, 0.0, 0.1192240191125779, 0.0, 0.0, 0.0, 0.0, -0.08816553595519666, 0.04620334311117923, -0.097845426279658, 0.09286290158908486, -0.05187858874991496, -0.04823894758299679, 0.0, 0.229342771859023, 0.20088266981583622, -0.0035114570910278267, 0.0, 0.26293906850341764, -0.009527137955553494, -0.010542819699527223, -0.021558061343293595, -0.09407261224981883, 0.0, 0.0036278302639834955, 0.0, 0.09436998917917545, -0.020178925515637925, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.1422362672307609, -0.03886837188701948, -0.008775482268292372, 0.0, 0.0, -0.03516380112840507, -0.0734885454355...word_weight: Array[(String, Double)] = Array((one,0.0), (great,0.6078697902359276), (good,0.2116386469012886), (like,0.0), (use,0.0), (get,-0.07843088615817914), (well,0.17669343260215034), (knife,0.0), (product,-0.0021723152299774552), (fit,-0.07700518697472948), (time,0.0), (work,-0.09148665488865505), (quality,0.0), (much,0.0), (little,0.1192240191125779), (really,0.0), (made,0.0), (bought,0.0), (also,0.0), (even,-0.08816553595519666), (used,0.04620334311117923), (better,-0.097845426279658), (price,0.09286290158908486), (back,-0.05187858874991496), (buy,-0.04823894758299679), (bike,0.0), (works,0.229342771859023), (nice,0.20088266981583622), (first,-0.0035114570910278267), (-,0.0), (easy,0.26293906850341764), (small,-0.009527137955553494), (got,-0.010542819699527223), (two,-0.0215580...feature: great, importance: 0.6078697902359276\nfeature: perfect, importance: 0.34404726951273945\nfeature: excellent, importance: 0.28217372351853814\nfeature: easy, importance: 0.26293906850341764\nfeature: love, importance: 0.23518819188672227\nfeature: returned, importance: -0.38185206877117467\nfeature: poor, importance: -0.35366409294425644\nfeature: waste, importance: -0.3159724826017525\nfeature: useless, importance: -0.2914292653060789\nfeature: return, importance: -0.2724012497362986\n"}]},"apps":[],"jobName":"paragraph_1554221563248_-571701712","id":"20171122-232203_359528816","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-09T19:46:55+0000","dateFinished":"2019-04-09T19:46:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12407"},{"title":"Print out most important positive and negative words","text":"\n\n// create a dataframe with vocabulary and weights columns\nval cdf = sc.parallelize(word_weight).toDF(\"word\",\"weight\")\n// show the most positive weighted words\ncdf.orderBy(desc(\"weight\")).show(10)\n// show the most negative words\ncdf.orderBy(\"weight\").show(10)","user":"mapr","dateUpdated":"2019-04-09T19:59:24+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"cdf: org.apache.spark.sql.DataFrame = [word: string, weight: double]\n+---------+-------------------+\n|     word|             weight|\n+---------+-------------------+\n|    great| 0.6078697902359276|\n|  perfect|0.34404726951273945|\n|excellent|0.28217372351853814|\n|     easy|0.26293906850341764|\n|     love|0.23518819188672227|\n|    works|  0.229342771859023|\n|     good| 0.2116386469012886|\n|   highly| 0.2044040462730194|\n|     nice|0.20088266981583622|\n|     best|0.18194893152633945|\n+---------+-------------------+\nonly showing top 10 rows\n\n+-------------+--------------------+\n|         word|              weight|\n+-------------+--------------------+\n|     returned|-0.38185206877117467|\n|         poor|-0.35366409294425644|\n|        waste| -0.3159724826017525|\n|      useless| -0.2914292653060789|\n|       return| -0.2724012497362986|\n|disappointing| -0.2666580559444479|\n|        broke| -0.2656765359468423|\n| disappointed|-0.23852780960293438|\n|    returning|-0.22432617475366876|\n|         junk|-0.21457169691127467|\n+-------------+--------------------+\nonly showing top 10 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs","http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1554246833234_1068990274","id":"20190402-231353_701122643","dateCreated":"2019-04-02T23:13:53+0000","dateStarted":"2019-04-09T19:59:24+0000","dateFinished":"2019-04-09T19:59:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12408"},{"title":"show most positive words in histogram","text":"z.show(cdf.orderBy(desc(\"weights\")).limit(5))","user":"mapr","dateUpdated":"2019-04-11T02:02:50+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"word":"string","weights":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"word","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"weights","index":1,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"word\tweights\ngreat\t0.5741137414159969\nperfect\t0.3033405922284417\neasy\t0.2647597408978307\nlove\t0.2468920436398584\nexcellent\t0.24583989221897404\n"}]},"apps":[],"jobName":"paragraph_1554247463520_-1466891470","id":"20190402-232423_351118787","dateCreated":"2019-04-02T23:24:23+0000","dateStarted":"2019-04-02T23:29:44+0000","dateFinished":"2019-04-02T23:29:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12409"},{"title":"Show most negative words","text":"z.show(cdf.orderBy(\"weights\").limit(5))","user":"mapr","dateUpdated":"2019-04-07T22:46:02+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"word":"string","weights":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"word\tweights\nreturned\t-0.3398686364743294\npoor\t-0.3323732509322993\nwaste\t-0.31636395540563556\nuseless\t-0.27615145716704886\n-bladethe\t-0.2675680953510939\n"}]},"apps":[],"jobName":"paragraph_1554247833413_2139027454","id":"20190402-233033_1191499234","dateCreated":"2019-04-02T23:30:33+0000","dateStarted":"2019-04-02T23:30:52+0000","dateFinished":"2019-04-02T23:30:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12410"},{"title":"show 20 negative and positive words","text":"cdf.orderBy(desc(\"weights\")).show(20)\ncdf.orderBy(\"weights\").show(20)","user":"mapr","dateUpdated":"2019-04-07T22:46:49+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true,"editorHide":false,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+-------------------+\n|     word|            weights|\n+---------+-------------------+\n|    great| 0.5786834193210185|\n|  perfect|0.30257651125981255|\n|     easy| 0.2495623918023548|\n|    works|  0.237342094349737|\n|excellent|0.23708737657300794|\n|     love|0.23386488555437113|\n|     nice|0.22832705971929523|\n|   highly| 0.2146202637918995|\n|  awesome|0.21415538504831438|\n|     good|0.20541897007795057|\n|perfectly| 0.1856852948318747|\n|     well|0.17879245878955707|\n|     beat|0.16648037087113937|\n|     best|0.15773568147874045|\n|    saves|0.15313102483809637|\n|    loves|0.13853211991469472|\n|   great!| 0.1367086213539169|\n|fantastic|0.12838381072694477|\n|   easier|0.12526976859362415|\n|      job|0.12401711596458083|\n+---------+-------------------+\nonly showing top 20 rows\n\n+-------------+--------------------+\n|         word|             weights|\n+-------------+--------------------+\n|         poor|-0.33778725829775663|\n|     returned| -0.3367533814089562|\n|        waste| -0.2929206558645589|\n|      useless| -0.2916913009537231|\n|    returning|-0.27545738663457797|\n| disappointed|-0.26876223836937074|\n|       return|-0.26023362013825474|\n|        broke| -0.2591367432585827|\n|disappointing|-0.23601176453763434|\n|          meh|-0.22826432114604236|\n|         junk|-0.22046455845294596|\n|       poorly|-0.22008378503606027|\n|unfortunately|-0.21808513251150044|\n|     terrible|-0.21489787081446177|\n|         sent|-0.21179530830415794|\n|         idea|-0.18248671656315543|\n|        cheap|-0.17633447572632402|\n|        worst|-0.16310908211876482|\n|         okay| -0.1620958553366595|\n|     horrible|-0.16107048954389655|\n+-------------+--------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1554221563253_-1338188427","id":"20190326-200529_1203115431","dateCreated":"2019-04-02T16:12:43+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:12411"},{"text":"%md\r\n## Evaluate the model on a test set\r\nThe actual performance of the model can be determined using the test data set which has not been used for any training. We'll transform the test set with the model pipeline, which will transform  the label and features, and then use the random forest model to get the predictions, according to the pipeline steps. \r\n\r\n","user":"mapr","dateUpdated":"2019-04-09T20:10:03+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Evaluate the model on a test set</h2>\n<p>The actual performance of the model can be determined using the test data set which has not been used for any training. We&rsquo;ll transform the test set with the model pipeline, which will transform the label and features, and then use the random forest model to get the predictions, according to the pipeline steps.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554221563260_1805387671","id":"20170602-155317_1487132664","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-09T20:10:03+0000","dateFinished":"2019-04-09T20:10:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12412"},{"title":"Get Predictions from Test data","text":"//transform the test set with the model pipeline,\n//which will map the features according to the same recipe\nval predictions = model.transform(testData) \n","user":"mapr","dateUpdated":"2019-04-02T23:36:12+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"predictions: org.apache.spark.sql.DataFrame = [asin: string, overall: double ... 12 more fields]\n"}]},"apps":[],"jobName":"paragraph_1554221563265_1338812339","id":"20170508-155848_1997894070","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-02T23:36:12+0000","dateFinished":"2019-04-02T23:36:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12413"},{"text":"%md\nBelow we evaluate the predictions, we use a BinaryClassificationEvaluator which returns a precision metric by comparing the test label column with the test prediction column. In this case, the evaluation returns 93% precision. Accuracy is measured by the area under the ROC curve. The area measures the ability of the test to correctly classify true positives from false positives. \nA random predictor would have .5 accuracy. The closer the value is to 1 the better its predictions are. \n\n","user":"mapr","dateUpdated":"2019-04-05T23:52:04+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Below we evaluate the predictions, we use a BinaryClassificationEvaluator which returns a precision metric by comparing the test label column with the test prediction column. In this case, the evaluation returns 93% precision. Accuracy is measured by the area under the ROC curve. The area measures the ability of the test to correctly classify true positives from false positives.<br/>A random predictor would have .5 accuracy. The closer the value is to 1 the better its predictions are.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554221563268_1880327819","id":"20170602-161538_1648758337","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-05T23:52:04+0000","dateFinished":"2019-04-05T23:52:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12414"},{"title":"Evaluate the predictions accuracy","text":"val evaluator = new BinaryClassificationEvaluator()  \nval areaUnderROC = evaluator.evaluate(predictions) \nprintln(\"areaUnderROC \"  + areaUnderROC)\n","user":"mapr","dateUpdated":"2019-04-02T23:36:16+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"evaluator: org.apache.spark.ml.evaluation.BinaryClassificationEvaluator = binEval_f85376760e70\nareaUnderROC: Double = 0.9366562625098906\nareaUnderROC 0.9366562625098906\n"}]},"apps":[],"jobName":"paragraph_1554221563271_884577799","id":"20170602-155622_1453197792","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-02T23:36:16+0000","dateFinished":"2019-04-02T23:36:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12415"},{"title":"show review text for most negative ","text":"predictions.filter($\"prediction\" === 0.0).select(\"summary\",\"reviewTokens\",\"probability\",\"label\",\"prediction\", \"rawPrediction\").orderBy(desc(\"rawPrediction\")).show(10)","user":"mapr","dateUpdated":"2019-04-05T23:52:34+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+--------------------+--------------------+-----+----------+--------------------+\n|             summary|        reviewTokens|         probability|label|prediction|       rawPrediction|\n+--------------------+--------------------+--------------------+-----+----------+--------------------+\n|  Worthless Garbage!|[worthless, garba...|[0.99999959657711...|  0.0|       0.0|[14.7232800755859...|\n|Decent but failin...|[decent, failing,...|[0.99999939321445...|  0.0|       0.0|[14.3150898071223...|\n|over rated and po...|[rated, poorly, m...|[0.99996693895557...|  0.0|       0.0|[10.3171218126892...|\n|dont waste your m...|[dont, waste, mon...|[0.99995674502867...|  0.0|       0.0|[10.0483551313772...|\n|Cheap Chineese JUNK!|[cheap, chineese,...|[0.99994988541174...|  0.0|       0.0|[9.90114829361609...|\n|                junk|[junk, use, 14, w...|[0.99994578558605...|  0.0|       0.0|[9.8225095290613,...|\n|             garbage|[garbage, much, b...|[0.99990679402644...|  0.0|       0.0|[9.28060553404257...|\n|A compass that do...|[compass, point, ...|[0.99990286613896...|  0.0|       0.0|[9.23932338158187...|\n|ATI Mosin scope m...|[ati, mosin, scop...|[0.99988202331572...|  0.0|       0.0|[9.04490556024812...|\n|    Lone star review|[lone, star, revi...|[0.99987254153111...|  0.0|       0.0|[8.96759251411125...|\n+--------------------+--------------------+--------------------+-----+----------+--------------------+\nonly showing top 10 rows\n\n"}]},"apps":[],"jobName":"paragraph_1554221563274_-1935951907","id":"20190325-212127_425739556","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-02T23:39:06+0000","dateFinished":"2019-04-02T23:39:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12416"},{"text":"predictions.filter($\"prediction\" === 0.0).select(\"summary\",\"reviewTokens\",\"overall\",\"prediction\").orderBy(desc(\"rawPrediction\")).show(5)","user":"mapr","dateUpdated":"2019-04-02T23:44:38+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+--------------------+-------+----------+\n|             summary|        reviewTokens|overall|prediction|\n+--------------------+--------------------+-------+----------+\n|  Worthless Garbage!|[worthless, garba...|    1.0|       0.0|\n|Decent but failin...|[decent, failing,...|    1.0|       0.0|\n|over rated and po...|[rated, poorly, m...|    2.0|       0.0|\n|dont waste your m...|[dont, waste, mon...|    1.0|       0.0|\n|Cheap Chineese JUNK!|[cheap, chineese,...|    1.0|       0.0|\n+--------------------+--------------------+-------+----------+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1554248415063_-824072605","id":"20190402-234015_636311690","dateCreated":"2019-04-02T23:40:15+0000","dateStarted":"2019-04-02T23:44:38+0000","dateFinished":"2019-04-02T23:44:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12417"},{"title":"show review text for most positive","text":"predictions.filter($\"prediction\" === 1.0).select(\"summary\",\"reviewTokens\",\"overall\",\"prediction\").orderBy(\"rawPrediction\").show(5)","user":"mapr","dateUpdated":"2019-04-05T23:53:10+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+--------------------+-------+----------+\n|             summary|        reviewTokens|overall|prediction|\n+--------------------+--------------------+-------+----------+\n|               great|[great, excellent...|    5.0|       1.0|\n|Outstanding Purchase|[outstanding, pur...|    5.0|       1.0|\n|A fantasitic stov...|[fantasitic, stov...|    5.0|       1.0|\n|Small But Delight...|[small, delightfu...|    5.0|       1.0|\n|Kabar made a good...|[kabar, made, goo...|    5.0|       1.0|\n+--------------------+--------------------+-------+----------+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1554248791981_1198402646","id":"20190402-234631_916018652","dateCreated":"2019-04-02T23:46:31+0000","dateStarted":"2019-04-02T23:47:50+0000","dateFinished":"2019-04-02T23:47:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12418"},{"text":"z.show( predictions.filter($\"prediction\" === 0.0).select(\"summary\",\"probability\",\"label\",\"prediction\", \"rawPrediction\").orderBy(desc(\"rawPrediction\")).limit(10))","user":"mapr","dateUpdated":"2019-04-02T20:02:20+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"summary":"string","probability":"string","label":"string","prediction":"string","rawPrediction":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"summary\tprobability\tlabel\tprediction\trawPrediction\nDon't overpay for cheap items or pay to return bad units\t[0.9999997832711808,2.1672881914128715E-7]\t0.0\t0.0\t[15.344618729556592,-15.344618729556592]\nyou will need a bit of luck !\t[0.99999897601455,1.0239854498917272E-6]\t0.0\t0.0\t[13.791807216552044,-13.791807216552044]\nStopped working after a month.  Completely worthless.\t[0.9999059419772169,9.405802278304376E-5]\t0.0\t0.0\t[9.2715046400272,-9.2715046400272]\nCheap Chineese JUNK!\t[0.9999044182961053,9.558170389469656E-5]\t0.0\t0.0\t[9.255433551805284,-9.255433551805284]\nWould not recomend\t[0.9998957585771299,1.0424142287023E-4]\t0.0\t0.0\t[9.168696728439812,-9.168696728439812]\ndont waste your money\t[0.9998943055783631,1.056944216367985E-4]\t0.0\t0.0\t[9.154852741905438,-9.154852741905438]\nGood luck!!\t[0.9998898730640295,1.101269359703688E-4]\t0.0\t0.0\t[9.113766761108433,-9.113766761108433]\nA compass that doesn't point north....\t[0.9998810635329266,1.1893646707342052E-4]\t0.0\t0.0\t[9.03680215402158,-9.03680215402158]\nmounts are loose\t[0.9998556344696068,1.4436553039319391E-4]\t0.0\t0.0\t[8.84301769323743,-8.84301769323743]\nItem didn't work upon arrival\t[0.9998470568824476,1.5294311755252975E-4]\t0.0\t0.0\t[8.785291531587294,-8.785291531587294]\n"}]},"apps":[],"jobName":"paragraph_1554221563278_-1738182447","id":"20190325-214111_892833676","dateCreated":"2019-04-02T16:12:43+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:12419"},{"text":"predictions.filter($\"prediction\" === 1.0).select(\"reviewText\",\"summary\",\"probability\",\"label\",\"prediction\", \"rawPrediction\").orderBy(\"rawPrediction\").show(10)","user":"mapr","dateUpdated":"2019-04-02T20:02:20+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+--------------------+--------------------+-----+----------+--------------------+\n|          reviewText|             summary|         probability|label|prediction|       rawPrediction|\n+--------------------+--------------------+--------------------+-----+----------+--------------------+\n|ORDERING/SHIPPING...|Outstanding Purchase|[2.73431507339530...|  1.0|       1.0|[-10.507017147137...|\n|I've only had thi...|Excellent knife, ...|[4.70702281411638...|  1.0|       1.0|[-9.9638227843783...|\n|Altus Athletic Al...|    Dad Loves it! :)|[6.41039522308937...|  1.0|       1.0|[-9.6549404326631...|\n|I bought this bik...|     It does the job|[1.25926550689737...|  1.0|       1.0|[-8.9796858175368...|\n|We needed a tent ...|Great tent, easy ...|[2.30521100300073...|  1.0|       1.0|[-8.3749376106108...|\n|This is a great k...|Great Buy - Very ...|[2.59172604294168...|  1.0|       1.0|[-8.2577570861863...|\n|This is a great l...|Kabar made a good...|[3.09433408125013...|  1.0|       1.0|[-8.0804581672286...|\n|This Ka-bar USMC ...|Great knife, Grea...|[5.89187787830214...|  1.0|       1.0|[-7.4361762388602...|\n|The Blur is a fin...|One of the best K...|[6.00031361004378...|  1.0|       1.0|[-7.4179284243215...|\n|I have tried too ...|The sharpmaker ma...|[6.52112761711558...|  1.0|       1.0|[-7.3346407381012...|\n+--------------------+--------------------+--------------------+-----+----------+--------------------+\nonly showing top 10 rows\n\n"}]},"apps":[],"jobName":"paragraph_1554221563281_-2084618188","id":"20190326-215034_1172466439","dateCreated":"2019-04-02T16:12:43+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:12420"},{"text":"z.show( predictions.filter($\"prediction\" === 1.0).select(\"summary\",\"probability\",\"label\",\"prediction\", \"rawPrediction\").orderBy(\"rawPrediction\").limit(10))","user":"mapr","dateUpdated":"2019-04-02T20:02:20+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"summary":"string","probability":"string","label":"string","prediction":"string","rawPrediction":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"summary\tprobability\tlabel\tprediction\trawPrediction\nOutstanding Purchase\t[2.734315073395304E-5,0.9999726568492662]\t1.0\t1.0\t[-10.507017147137413,10.507017147137413]\nExcellent knife, takes some getting used to\t[4.707022814116384E-5,0.9999529297718588]\t1.0\t1.0\t[-9.963822784378385,9.963822784378385]\nDad Loves it! :)\t[6.410395223089374E-5,0.999935896047769]\t1.0\t1.0\t[-9.654940432663171,9.654940432663171]\nIt does the job\t[1.2592655068973735E-4,0.9998740734493103]\t1.0\t1.0\t[-8.979685817536875,8.979685817536875]\nGreat tent, easy setup and easy take down.\t[2.3052110030007364E-4,0.9997694788997]\t1.0\t1.0\t[-8.37493761061087,8.37493761061087]\nGreat Buy - Very Pleased\t[2.591726042941683E-4,0.9997408273957059]\t1.0\t1.0\t[-8.257757086186304,8.257757086186304]\nKabar made a good folder,\t[3.094334081250139E-4,0.9996905665918749]\t1.0\t1.0\t[-8.080458167228693,8.080458167228693]\nGreat knife, Great value\t[5.891877878302143E-4,0.9994108122121699]\t1.0\t1.0\t[-7.43617623886029,7.43617623886029]\nOne of the best Kershaw Ken Onion designs\t[6.000313610043788E-4,0.9993999686389957]\t1.0\t1.0\t[-7.417928424321573,7.417928424321573]\nThe sharpmaker makes things sharp... Wait that wasn't clever at all..\t[6.521127617115587E-4,0.9993478872382884]\t1.0\t1.0\t[-7.334640738101213,7.334640738101213]\n"}]},"apps":[],"jobName":"paragraph_1554221563284_-890668393","id":"20190325-212851_79604233","dateCreated":"2019-04-02T16:12:43+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:12421"},{"text":"%md\nBelow, we calculate some more metrics. The number of false/true positive and negative predictions is also useful:\n\nTrue positives are how often the model correctly predicted positive\nFalse positives are how often the model incorrectly predicted positive\nTrue negatives indicate how often the model correctly predicted not positive\nFalse negatives indicate how often the model incorrectly predicted not positive","user":"mapr","dateUpdated":"2019-04-05T23:54:08+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Below, we calculate some more metrics. The number of false/true positive and negative predictions is also useful:</p>\n<p>True positives are how often the model correctly predicted positive<br/>False positives are how often the model incorrectly predicted positive<br/>True negatives indicate how often the model correctly predicted not positive<br/>False negatives indicate how often the model incorrectly predicted not positive</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554221563286_-110183151","id":"20190305-233843_231265861","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-05T23:54:08+0000","dateFinished":"2019-04-05T23:54:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12422"},{"title":"Calculate some more metrics","text":"val lp = predictions.select(  \"prediction\",\"label\")\nval counttotal = predictions.count().toDouble\nval correct = lp.filter($\"label\" === $\"prediction\").count().toDouble\nval wrong = lp.filter(\"label != prediction\").count().toDouble\nval ratioWrong=wrong/counttotal\nval ratioCorrect=correct/counttotal\nval truen =( lp.filter($\"prediction\" === 0.0).filter($\"label\" === $\"prediction\").count()) /counttotal\nval truep = (lp.filter($\"prediction\" === 1.0).filter($\"label\" === $\"prediction\").count())/counttotal\nval falsen = (lp.filter($\"prediction\" === 0.0).filter(not($\"label\" === $\"prediction\")).count())/counttotal\nval falsep = (lp.filter($\"prediction\" === 1.0).filter(not($\"label\" === $\"prediction\")).count())/counttotal\n\n\nval precision = truep / (truep + falsep)\nval recall = truep / (truep + falsen)\nval fmeasure = 2 * precision * recall / (precision + recall)\nval accuracy = (truep + truen) / (truep + truen + falsep + falsen)","user":"mapr","dateUpdated":"2019-04-02T20:02:20+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"lp: org.apache.spark.sql.DataFrame = [prediction: double, label: double]\ncounttotal: Double = 6112.0\ncorrect: Double = 5290.0\nwrong: Double = 822.0\nratioWrong: Double = 0.13448952879581152\nratioCorrect: Double = 0.8655104712041884\ntruen: Double = 0.3417866492146597\ntruep: Double = 0.5237238219895288\nfalsen: Double = 0.044829842931937175\nfalsep: Double = 0.08965968586387435\nprecision: Double = 0.8538276873833023\nrecall: Double = 0.9211510791366907\nfmeasure: Double = 0.8862126245847176\naccuracy: Double = 0.8655104712041886\n"}]},"apps":[],"jobName":"paragraph_1554221563289_-664224736","id":"20181015-224231_2027590368","dateCreated":"2019-04-02T16:12:43+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:12423"},{"text":" var test =\"/user/mapr/data/revsportstream.json\"\n// With the SparkSession read method, read data from a file into a Dataset\n val testds  = spark.read.format(\"json\").option(\"inferSchema\", \"true\").load(test) \n val testdf = testds.withColumn(\"reviewTS\", concat($\"summary\",lit(\" \"),$\"reviewText\" ))\n// display the first 20 rows of the DataFrame\n testdf.show","user":"mapr","dateUpdated":"2019-04-09T20:11:44+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"test: String = /user/mapr/data/revsportstream.json\ntestds: org.apache.spark.sql.DataFrame = [asin: string, helpful: array<bigint> ... 7 more fields]\ntestdf: org.apache.spark.sql.DataFrame = [asin: string, helpful: array<bigint> ... 8 more fields]\n+----------+-------+-------+--------------------+-----------+--------------+--------------------+--------------------+--------------+--------------------+\n|      asin|helpful|overall|          reviewText| reviewTime|    reviewerID|        reviewerName|             summary|unixReviewTime|            reviewTS|\n+----------+-------+-------+--------------------+-----------+--------------+--------------------+--------------------+--------------+--------------------+\n|B003Y5C132| [0, 0]|    5.0|I keep my pistol ...| 02 1, 2013|A1893518A6WB9Z|CowBoy \"Joshua Ma...|   I LOVE THIS THING|    1359676800|I LOVE THIS THING...|\n|B003Y5C132| [0, 0]|    5.0|I ordered more th...|07 29, 2013|A13DO5FB5XK1JQ| C. Richard Clark II|Great ammo boxes ...|    1375056000|Great ammo boxes ...|\n|B003Y5C132| [0, 0]|    5.0|When I got this I...|09 27, 2013|A3KCZSBWK8EFP1|Curtiss L. Linderman|Well finished, du...|    1380240000|Well finished, du...|\n|B003Y5C132| [8, 9]|    5.0|I bought this 30 ...|01 23, 2012|A2BESHHTTDGI2Y|                 EZE|  Excellent Ammo Can|    1327276800|Excellent Ammo Ca...|\n|B003Y5C132| [0, 1]|    2.0|Just buy an unuse...|12 26, 2013|A2VFVHKFX46FSD|Frank Beckendorf ...|Expensive and Wit...|    1388016000|Expensive and Wit...|\n|B003Y5C132| [0, 1]|    5.0|a bit pricy but v...| 11 7, 2013|A1IJAAC3PY3GP4|           GLOCKIOMM|          great cans|    1383782400|great cans a bit ...|\n|B003Y5C132| [0, 0]|    5.0|Who expects to re...| 01 5, 2014|A3QRW0UJPKIAX7|      Grant Fritchey|       Clean MilSurp|    1388880000|Clean MilSurp Who...|\n|B003Y5C132| [0, 0]|    5.0|These cans came i...|02 11, 2013|A260YYTXMTW4ML|        Hammerhead23|           Well made|    1360540800|Well made These c...|\n|B003Y5C132| [0, 0]|    5.0|Got one of these ...| 02 7, 2012|A33GGSCDB6U8OF|                  JR|    Glad I bought it|    1328572800|Glad I bought it ...|\n|B003Y5C132| [0, 1]|    5.0|A little small in...|11 20, 2013|A1PUWI9RTQV19S|                kris|       Nice ammo can|    1384905600|Nice ammo can A l...|\n|B003Y5C132| [0, 0]|    5.0|I received my amm...|02 18, 2013| AVVV0NS7JN5WW|              Mike L|   Excellent Service|    1361145600|Excellent Service...|\n|B003Y5C132| [0, 1]|    5.0|perfect waterproo...|01 30, 2013|A1U8UPXQ20SEMP|robert the floori...|looked brand new ...|    1359504000|looked brand new ...|\n|B003Y5C132| [0, 1]|    5.0|Was in good condi...|01 10, 2014|A334KDC20V104Z|      Starken Streik|Great storage con...|    1389312000|Great storage con...|\n|B003Y5C132| [0, 0]|    5.0|I bought this for...| 08 3, 2013|A26IRZJV6D220M|      Traveling Hobo|             Pleased|    1375488000|Pleased I bought ...|\n|B003Y5C132| [0, 0]|    4.0|Expensive.better ...|06 29, 2014|A3H3UY1U409FT5|        userrbrt6154|Expensive for use...|    1404000000|Expensive for use...|\n|B003Y5C132| [0, 0]|    5.0|I've spent a lot ...|11 20, 2012|A18PWDGYI9AK7A|         xXxDOYLExXx|WILL BUY FROM AGA...|    1353369600|WILL BUY FROM AGA...|\n|B003Y5PZ0S| [1, 1]|    4.0|This backpack has...| 03 8, 2011|A3SMR4HRFJARSC|         ChristineMM|Comfortable - Lot...|    1299542400|Comfortable - Lot...|\n|B003Y5PZ0S| [2, 2]|    5.0|I love this lapto...|08 18, 2011|A1S52XH2CS4Y26|      Fitzgerald Fan|      So convenient!|    1313625600|So convenient! I ...|\n|B003Y5PZ0S| [4, 4]|    4.0|This backpack is ...|01 25, 2011|A2WCFDOCS73PNB|           Gadgetman|Nice Backpack for...|    1295913600|Nice Backpack for...|\n|B003Y5PZ0S| [1, 1]|    5.0|Over the years, b...|01 29, 2011|A2WZNM833CJH82|             Grandma|A Superb Place fo...|    1296259200|A Superb Place fo...|\n+----------+-------+-------+--------------------+-----------+--------------+--------------------+--------------------+--------------+--------------------+\nonly showing top 20 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs","http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1554221563291_-683881813","id":"20190322-214213_2113177403","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-09T20:11:44+0000","dateFinished":"2019-04-09T20:11:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12424"},{"text":"val tdf1 = testdf.filter(\"overall !=3\")\nval bucketizer = new Bucketizer().setInputCol(\"overall\").setOutputCol(\"label\").setSplits(Array(Double.NegativeInfinity,4.0,Double.PositiveInfinity))\n\nval tdf2= bucketizer.transform(tdf1)\n\nval p2 = model.transform(tdf2)","user":"mapr","dateUpdated":"2019-04-09T20:11:53+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"tdf1: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [asin: string, helpful: array<bigint> ... 8 more fields]\nbucketizer: org.apache.spark.ml.feature.Bucketizer = bucketizer_850b4f1bbd44\ntdf2: org.apache.spark.sql.DataFrame = [asin: string, helpful: array<bigint> ... 9 more fields]\np2: org.apache.spark.sql.DataFrame = [asin: string, helpful: array<bigint> ... 16 more fields]\n"}]},"apps":[],"jobName":"paragraph_1554221563294_545355548","id":"20190322-214550_1046555819","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-09T20:11:53+0000","dateFinished":"2019-04-09T20:11:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12425"},{"text":"val evaluator = new BinaryClassificationEvaluator() \nval e = evaluator.evaluate(p2)","user":"mapr","dateUpdated":"2019-04-09T20:13:29+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"evaluator: org.apache.spark.ml.evaluation.BinaryClassificationEvaluator = binEval_303dfdf52cb3\ne: Double = 0.9372835942606301\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs","http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs","http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs","http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1554221563297_-1637193877","id":"20190322-214422_192159375","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-09T20:13:29+0000","dateFinished":"2019-04-09T20:13:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12426"},{"text":"val lp = p2.select(  \"prediction\",\"label\")\nval counttotal = lp.count().toDouble\nval correct = lp.filter($\"label\" === $\"prediction\").count().toDouble\nval wrong = lp.filter(\"label != prediction\").count().toDouble\nval ratioWrong=wrong/counttotal\nval ratioCorrect=correct/counttotal\nval truen =( lp.filter($\"prediction\" === 0.0).filter($\"label\" === $\"prediction\").count()) /counttotal\nval truep = (lp.filter($\"prediction\" === 1.0).filter($\"label\" === $\"prediction\").count())/counttotal\nval falsen = (lp.filter($\"prediction\" === 0.0).filter(not($\"label\" === $\"prediction\")).count())/counttotal\nval falsep = (lp.filter($\"prediction\" === 1.0).filter(not($\"label\" === $\"prediction\")).count())/counttotal\n\nval precision = truep / (truep + falsep)\nval recall = truep / (truep + falsen)\nval fmeasure = 2 * precision * recall / (precision + recall)\nval accuracy = (truep + truen) / (truep + truen + falsep + falsen)","user":"mapr","dateUpdated":"2019-04-02T20:02:20+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"lp: org.apache.spark.sql.DataFrame = [prediction: double, label: double]\ncounttotal: Double = 88334.0\ncorrect: Double = 80858.0\nwrong: Double = 7476.0\nratioWrong: Double = 0.08463332352208662\nratioCorrect: Double = 0.9153666764779134\ntruen: Double = 0.05455430525052641\ntruep: Double = 0.860812371227387\nfalsen: Double = 0.06973532275228111\nfalsep: Double = 0.01489800076980551\nprecision: Double = 0.9829875250468618\nrecall: Double = 0.9250599155707491\nfmeasure: Double = 0.9531443899870891\naccuracy: Double = 0.9153666764779134\n"}]},"apps":[],"jobName":"paragraph_1554221563299_1031140706","id":"20190322-214743_2133026750","dateCreated":"2019-04-02T16:12:43+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:12427"},{"text":"p2.filter($\"prediction\" === 0.0).select(\"summary\",\"reviewTokens\",\"overall\",\"prediction\").orderBy(desc(\"probability\")).show(5)\n","user":"mapr","dateUpdated":"2019-04-09T20:16:21+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+--------------------+-------+----------+\n|             summary|        reviewTokens|overall|prediction|\n+--------------------+--------------------+-------+----------+\n|BOUGHT 2, LASER Q...|[bought, 2, laser...|    1.0|       0.0|\n|Good looking knif...|[good, looking, k...|    1.0|       0.0|\n|DO NOT BUY HERE I...|[buy, need, custo...|    1.0|       0.0|\n|Awful Phone and T...|[awful, phone, te...|    1.0|       0.0|\n|Danger! Cheap Bri...|[danger!, cheap, ...|    1.0|       0.0|\n+--------------------+--------------------+-------+----------+\nonly showing top 5 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1554840782605_1325370190","id":"20190409-201302_305927581","dateCreated":"2019-04-09T20:13:02+0000","dateStarted":"2019-04-09T20:16:21+0000","dateFinished":"2019-04-09T20:16:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12428"},{"text":"p2.filter($\"prediction\" === 0.0).select(\"summary\",\"reviewTokens\",\"overall\",\"prediction\").orderBy(desc(\"rawPrediction\")).show(5)","user":"mapr","dateUpdated":"2019-04-09T20:24:12+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+--------------------+-------+----------+\n|             summary|        reviewTokens|overall|prediction|\n+--------------------+--------------------+-------+----------+\n|BOUGHT 2, LASER Q...|[bought, 2, laser...|    1.0|       0.0|\n|Good looking knif...|[good, looking, k...|    1.0|       0.0|\n|DO NOT BUY HERE I...|[buy, need, custo...|    1.0|       0.0|\n|Awful Phone and T...|[awful, phone, te...|    1.0|       0.0|\n|Danger! Cheap Bri...|[danger!, cheap, ...|    1.0|       0.0|\n+--------------------+--------------------+-------+----------+\nonly showing top 5 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1554841434543_-667508872","id":"20190409-202354_1559133339","dateCreated":"2019-04-09T20:23:54+0000","dateStarted":"2019-04-09T20:24:12+0000","dateFinished":"2019-04-09T20:24:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12429"},{"text":"p2.filter($\"prediction\" === 1.0).select(\"summary\",\"reviewTokens\",\"overall\",\"prediction\",\"probability\").orderBy(\"probability\").show(5)","user":"mapr","dateUpdated":"2019-04-09T20:18:32+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+--------------------+-------+----------+--------------------+\n|             summary|        reviewTokens|overall|prediction|         probability|\n+--------------------+--------------------+-------+----------+--------------------+\n|A great way to do...|[great, way, push...|    5.0|       1.0|[4.88883460714278...|\n|For the price an ...|[price, excellent...|    5.0|       1.0|[4.11883877746623...|\n|My Favorite Multi...|[favorite, multit...|    5.0|       1.0|[5.09858341775063...|\n|      Nearly Perfect|[nearly, perfect,...|    4.0|       1.0|[8.05411876798048...|\n|Fantastic Product...|[fantastic, produ...|    5.0|       1.0|[1.27991643835007...|\n+--------------------+--------------------+-------+----------+--------------------+\nonly showing top 5 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1554841026121_-1604559212","id":"20190409-201706_946113887","dateCreated":"2019-04-09T20:17:06+0000","dateStarted":"2019-04-09T20:18:32+0000","dateFinished":"2019-04-09T20:18:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12430"},{"text":"z.show(p2.filter($\"prediction\" === 1.0).select(\"summary\",\"overall\",\"prediction\",\"probability\").orderBy(\"probability\").limit(5))","user":"mapr","dateUpdated":"2019-04-09T20:21:46+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"summary":"string","overall":"string","prediction":"string","probability":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"summary\toverall\tprediction\tprobability\nA great way to do push ups!\t5.0\t1.0\t[4.88883460714278E-13,0.9999999999995111]\nFor the price an excellent phone\t5.0\t1.0\t[4.118838777466234E-12,0.9999999999958811]\nMy Favorite Multitool Ever: a Supertool that fits in your pocket\t5.0\t1.0\t[5.098583417750639E-10,0.9999999994901416]\nNearly Perfect\t4.0\t1.0\t[8.054118767980487E-9,0.9999999919458812]\nFantastic Product! Definitely Mil-Spec & Law-Pro Match-Grade/Quality -- even better! for my @ Mossberg 500!\t5.0\t1.0\t[1.279916438350072E-8,0.9999999872008355]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1554841176207_1537511582","id":"20190409-201936_1030436738","dateCreated":"2019-04-09T20:19:36+0000","dateStarted":"2019-04-09T20:21:29+0000","dateFinished":"2019-04-09T20:21:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12431"},{"text":"z.show( p2.filter($\"prediction\" === 0.0).select(\"summary\",\"probability\",\"label\",\"prediction\", \"rawPrediction\").orderBy(desc(\"rawPrediction\")).limit(10))","user":"mapr","dateUpdated":"2019-04-02T20:02:21+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"summary":"string","probability":"string","label":"string","prediction":"string","rawPrediction":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"summary\tprobability\tlabel\tprediction\trawPrediction\nBOUGHT 2, LASER QUIT ON BOTH ON SAME DAY I BOUGHT THEM\t[0.9999999999999982,1.8182415694255817E-15]\t0.0\t0.0\t[33.940906531510976,-33.940906531510976]\nGood looking knife but thumb stud is useless\t[0.9999999999634488,3.655131256665543E-11]\t0.0\t0.0\t[24.032304018804613,-24.032304018804613]\nDO NOT BUY HERE IF YOU NEED CUSTOMER SERVICE\t[0.9999999886860845,1.131391548304517E-8]\t0.0\t0.0\t[18.29723239886095,-18.29723239886095]\nBuyer Beware - You Might Want to Read This\t[0.9999998166941838,1.8330581627141602E-7]\t0.0\t0.0\t[15.512109768412266,-15.512109768412266]\nAwful Phone and Terrible Tmobile Customer Service\t[0.9999997484109091,2.515890908180019E-7]\t0.0\t0.0\t[15.195468420699969,-15.195468420699969]\nGreat product but Terrible Customer Service!!\t[0.9999993524105649,6.475894350997925E-7]\t0.0\t0.0\t[14.250008281615031,-14.250008281615031]\nMako Group GMG AR-15 Armorers tool\t[0.9999993219902023,6.780097977290587E-7]\t0.0\t0.0\t[14.204103420172586,-14.204103420172586]\nCompletely Revised Review\t[0.9999988785492815,1.121450718623232E-6]\t0.0\t0.0\t[13.700886304878154,-13.700886304878154]\nYou Buy Crap - You Get Crap!\t[0.9999988643205272,1.1356794728166023E-6]\t0.0\t0.0\t[13.688278296008923,-13.688278296008923]\nSketchy phone, atrocious service, very cheap monthly fee\t[0.999998777055476,1.222944524073552E-6]\t0.0\t0.0\t[13.614247839871362,-13.614247839871362]\n"}]},"apps":[],"jobName":"paragraph_1554221563302_-377578277","id":"20190326-202443_203116319","dateCreated":"2019-04-02T16:12:43+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:12432"},{"text":"//  show worst rated product ids\np2.filter($\"overall\" === 1.0).groupBy(\"overall\",\"asin\").count.orderBy(desc(\"count\")).show(5)\n\n","user":"mapr","dateUpdated":"2019-04-09T20:54:30+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+----------+-----+\n|overall|      asin|count|\n+-------+----------+-----+\n|    1.0|B00A17I99Q|   18|\n|    1.0|B00BGO0Q9O|   17|\n|    1.0|B008VS8M58|   17|\n|    1.0|B004DDJNOY|   12|\n|    1.0|B006IHILTG|   12|\n+-------+----------+-----+\nonly showing top 5 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1554842534026_901155961","id":"20190409-204214_1516819617","dateCreated":"2019-04-09T20:42:14+0000","dateStarted":"2019-04-09T20:45:50+0000","dateFinished":"2019-04-09T20:45:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12433"},{"text":"p2.select(\"summary\",\"reviewText\",\"overall\",\"label\",\"prediction\").filter(\"asin='B00A17I99Q'\").orderBy(\"overall\").show(10)\n","user":"mapr","dateUpdated":"2019-04-09T20:56:46+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+--------------------+-------+-----+----------+\n|             summary|          reviewText|overall|label|prediction|\n+--------------------+--------------------+-------+-----+----------+\n|For the data hung...|I saw the Jawbone...|    1.0|  0.0|       1.0|\n|I wish I could gi...|I had purchased t...|    1.0|  0.0|       0.0|\n|         DO NOT BUY!|Do your research ...|    1.0|  0.0|       0.0|\n|         Returned it|I could not get t...|    1.0|  0.0|       0.0|\n| didn't do it for me|didn't like it.  ...|    1.0|  0.0|       0.0|\n|Fragile, just lik...|//UpdateMy second...|    1.0|  0.0|       0.0|\n|Almost perfect de...|I waited a while ...|    1.0|  0.0|       0.0|\n|Not all its crack...|I started with th...|    1.0|  0.0|       0.0|\n|         Returned...|I gave it as a gi...|    1.0|  0.0|       0.0|\n|Defective product...|1st jawbone up 2n...|    1.0|  0.0|       0.0|\n+--------------------+--------------------+-------+-----+----------+\nonly showing top 10 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1554843272191_-2047861022","id":"20190409-205432_21848564","dateCreated":"2019-04-09T20:54:32+0000","dateStarted":"2019-04-09T20:56:46+0000","dateFinished":"2019-04-09T20:56:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12434"},{"text":"z.show( predictions.filter($\"prediction\" === 1.0).select(\"summary\",\"probability\",\"label\",\"prediction\", \"rawPrediction\").orderBy(\"rawPrediction\").limit(10))","user":"mapr","dateUpdated":"2019-04-02T20:02:21+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"summary":"string","probability":"string","label":"string","prediction":"string","rawPrediction":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"summary\tprobability\tlabel\tprediction\trawPrediction\nOutstanding Purchase\t[2.734315073395304E-5,0.9999726568492662]\t1.0\t1.0\t[-10.507017147137413,10.507017147137413]\nExcellent knife, takes some getting used to\t[4.707022814116384E-5,0.9999529297718588]\t1.0\t1.0\t[-9.963822784378385,9.963822784378385]\nDad Loves it! :)\t[6.410395223089374E-5,0.999935896047769]\t1.0\t1.0\t[-9.654940432663171,9.654940432663171]\nIt does the job\t[1.2592655068973735E-4,0.9998740734493103]\t1.0\t1.0\t[-8.979685817536875,8.979685817536875]\nGreat tent, easy setup and easy take down.\t[2.3052110030007364E-4,0.9997694788997]\t1.0\t1.0\t[-8.37493761061087,8.37493761061087]\nGreat Buy - Very Pleased\t[2.591726042941683E-4,0.9997408273957059]\t1.0\t1.0\t[-8.257757086186304,8.257757086186304]\nKabar made a good folder,\t[3.094334081250139E-4,0.9996905665918749]\t1.0\t1.0\t[-8.080458167228693,8.080458167228693]\nGreat knife, Great value\t[5.891877878302143E-4,0.9994108122121699]\t1.0\t1.0\t[-7.43617623886029,7.43617623886029]\nOne of the best Kershaw Ken Onion designs\t[6.000313610043788E-4,0.9993999686389957]\t1.0\t1.0\t[-7.417928424321573,7.417928424321573]\nThe sharpmaker makes things sharp... Wait that wasn't clever at all..\t[6.521127617115587E-4,0.9993478872382884]\t1.0\t1.0\t[-7.334640738101213,7.334640738101213]\n"}]},"apps":[],"jobName":"paragraph_1554221563305_-697604497","id":"20190326-202536_1399552700","dateCreated":"2019-04-02T16:12:43+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:12435"},{"text":"%md \nHow do you think the accuracy could be improved?\nAdd more historical data? \n\nTune the model with K-fold cross validation ?\n","user":"mapr","dateUpdated":"2019-04-05T23:54:36+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>How do you think the accuracy could be improved?<br/>Add more historical data? </p>\n<p>Tune the model with K-fold cross validation ?</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554221563308_1210340521","id":"20181004-211413_1357524146","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-05T23:54:36+0000","dateFinished":"2019-04-05T23:54:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12436"},{"title":"Save the model to use with streaming data","text":"var dir =\"/user/mapr/sentmodel/\"\nmodel.write.overwrite().save(dir)\n//df.unpersist\n//df1.unpersist\n//df2.unpersist\n//df3.unpersist\n//trainingData.unpersist","user":"mapr","dateUpdated":"2019-04-09T19:41:08+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"dir: String = /user/mapr/sentmodel/\n"}]},"apps":[],"jobName":"paragraph_1554221563311_-1128914853","id":"20181015-213933_2083506099","dateCreated":"2019-04-02T16:12:43+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:12437"},{"text":"// to read model \nimport spark.implicits._\nvar dir =\"/user/mapr/sentmodel/\"\nval model = org.apache.spark.ml.PipelineModel.load(dir)\n","user":"mapr","dateUpdated":"2019-04-09T19:42:32+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import spark.implicits._\ndir: String = /user/mapr/sentmodel/\nmodel: org.apache.spark.ml.PipelineModel = pipeline_a0a51ed2793b\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs","http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs","http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs","http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs","http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs","http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs","http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs","http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs","http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs","http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs","http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs","http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs","http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs","http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs","http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs","http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs","http://mapr-resman:8088/proxy/application_1554506742874_0005//jobs"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1554838887799_709420929","id":"20190409-194127_1283071174","dateCreated":"2019-04-09T19:41:27+0000","dateStarted":"2019-04-09T19:42:32+0000","dateFinished":"2019-04-09T19:42:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12438"},{"text":"%md\n## End of Part 1\nThis is the end of this notebook. \n","user":"mapr","dateUpdated":"2019-04-05T23:55:03+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>End of Part 1</h2>\n<p>This is the end of this notebook.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554221563315_-1457550332","id":"20190308-214104_123247947","dateCreated":"2019-04-02T16:12:43+0000","dateStarted":"2019-04-05T23:55:03+0000","dateFinished":"2019-04-05T23:55:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12439"},{"text":"","user":"mapr","dateUpdated":"2019-04-09T20:11:12+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1554221563318_-537001260","id":"20190308-214100_1285199507","dateCreated":"2019-04-02T16:12:43+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:12440"},{"user":"mapr","dateUpdated":"2019-04-02T20:02:21+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1554221563322_1077367956","id":"20171122-091021_1615582434","dateCreated":"2019-04-02T16:12:43+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:12441"}],"name":"cmcdonald/TextClassificationSentimentAnalysis","id":"2EA4U8SEP","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}